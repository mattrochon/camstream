from http.server import ThreadingHTTPServer, SimpleHTTPRequestHandler
import threading
import shutil


class DirectoryHandler(SimpleHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory="public", **kwargs)


def run_server(httpd):
    httpd.serve_forever()
    

def old_main(args):
    httpd = ThreadingHTTPServer(('0.0.0.0', 8080), DirectoryHandler)
    thread = threading.Thread(target=run_server, args=[httpd], group=None, daemon=True)
    thread.start()
    
    camera = video.Video()
    
    while True:
        try:
            frame = camera.frame()
            if frame is not None:
                (flag, jpeg) = cv2.imencode(".jpg", frame)
                if not flag:
                    print("error making jpeg")
                    continue
                   
                with open("public/_stream.jpg", "wb") as bfile:
                    bfile.write(bytearray(jpeg))
                    
                shutil.move("public/_stream.jpg", "public/stream.jpg")
                
        except e:
            print(e)
        
    camera.close()
    httpd.shutdown()
    thread.join()
    
    return 0
